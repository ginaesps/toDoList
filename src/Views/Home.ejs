<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
 
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>

    <script src="../public/Scripts/home.js"></script>
    <link rel="stylesheet" href="../public/Styles/home.css">

    <script src="../Public/Scripts/socket.io.min.js"></script>

</head>
<body>
    <div class="modal fade" id="AddAula" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Agregar</h5>
        </div>
        <div class="modal-body">
            <div class="wrapper fadeInDown">
                <div id="formContent">
                    <form id="formAdd" method="POST" action="" enctype="application/x-www-form-urlencoded" class="row">
                        <div class="form-group">
                            <label for="Name">Name</label>
                            <input type="text" id="Name" class="" name="Name" placeholder="Name"></input>
                        </div>
                        <div class="form-group">
                            <label for="Description">Description</label>
                            <input type="text" id="Description" class="" name="Description" placeholder="Description"></input>
                        </div>
                        <div class="form-group">
                            <label for="Autor">Autor</label>
                            <input type="text" id="Autor" class="" name="Autor" placeholder="Autor"></input>
                        </div>
                        <div class="form-group" style="display: none;">
                            <label for="Estado">Estado</label>
                            <input type="checkbox" id="Estado" class="" name="Estado"></input>
                        </div>
                        <div class="form-group">
                            <label for="Date">Date</label>
                            <input name="Date"  type="datetime-local" ></input>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-success" onclick="ADD(this.parentNode.parentNode);">Save</button>
        </div>
        </div>
    </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <form action="#" method="get">
                    <div class="input-group">
                        <input class="form-control" id="system-search" name="q" placeholder="Search for" required>
                        <span class="input-group-btn">
                            <button type="submit" class="btn btn-default"><i class="glyphicon glyphicon-search"></i></button>
                        </span>
                    </div>
                </form>
                <br>
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#AddAula">Add</button>
               
            </div>
            <br>
            <div class=" table-responsive">
                <table id="lista" class="table table-list-search">
                    <thead>
                        <tr>
                            <th scope="col">Name</th>
                            <th scope="col">Description</th>
                            <th scope="col">Autor</th>
                            <th scope="col">Date</th>
                            <th scope="col">Estado</th>
                            <th scope="col">Accion</th>
                        </tr>
                    </thead>
                    <tbody id="ToDoList">
                        <%for(var i= 0; i < lista.length; i++){%>
                            <tr <% if(lista[i].Estado == 0){%><% }else{%> style="text-decoration: line-through;" <%}%>>
                                <td style="display: none;"><%= lista[i].id%></td>
                                <td ><%= lista[i].Name%></td>
                                <td><%= lista[i].Description%></td>
                                <td><%= lista[i].Autor%></td>
                                <td><%= lista[i].Date%></td>
                                <td><input type="checkbox" class=" btn btn-info btn-block" onclick="change(this.parentNode.parentNode)" <%if(lista[i].Estado == 1){%>checked<%}%>></input></td>
                                <td>
                                    <button type="button" class=" btn btn-danger btn-block" onclick="Delete(this.parentNode.parentNode);">Delete</button>
                                </td>
                            </tr>
                        <%}%>
                    </tbody>
                </table>   
            </div>
        </div>
    </div>

    <script>

        var socket = io("http://127.0.0.1:5001", { //socket conection with client
            extraHeaders: {
                "my-custom-header": "abcd"
            }
        });

        socket.on('toDo', function(obj) { //typeof = tarea
        
            let Lista = document.getElementById('ToDoList'); //tbody
            let tr;
            if(obj[0].Estado == 0){
                tr =  `
                    <tr>
                        <td>${obj[0].Name}</td>
                        <td>${obj[0].Description}</td>
                        <td>${obj[0].Autor}</td>
                        <td>${new Date(obj[0].Date)}</td>
                        <td><input type="checkbox" class=" btn btn-info btn-block" onclick="change(this.parentNode.parentNode)"></input></td>
                        <td>
                            <button type="button" class=" btn btn-danger btn-block" onclick="Delete(this.parentNode.parentNode);">Delete</button>
                        </td>
                    </tr>
                `;
            }
            else{
                tr =  `
                    <tr style="text-decoration: line-through;">
                        <td>${obj[0].Name}</td>
                        <td>${obj[0].Description}</td>
                        <td>${obj[0].Autor}</td>
                        <td>${new Date(obj[0].Date)}</td>
                        <td><input type="checkbox" class=" btn btn-info btn-block" onclick="change(this.parentNode.parentNode)"></input></td>
                        <td>
                            <button type="button" class=" btn btn-danger btn-block" onclick="Delete(this.parentNode.parentNode);">Delete</button>
                        </td>
                    </tr>
                `;
            }

            Lista.innerHTML += tr;
        });

        async function ADD(obj){
            let Name = obj.getElementsByTagName('input')[0].value;
            let Description = obj.getElementsByTagName('input')[1].value;
            let Autor = obj.getElementsByTagName('input')[2].value;
            let Estado = obj.getElementsByTagName('input')[3].checked;
            let fecha = obj.getElementsByTagName('input')[4].value;

            let data = {
                    "Name": Name,
                    "Description": Description,
                    "Autor": Autor,
                    "Estado": Estado,
                    "Date": new Date(fecha)
                };

            let response = await fetch('/add', {
                method: 'POST', 
                credentials: 'include',
                body: JSON.stringify(data),
                headers:{
                    'Content-Type': 'application/json'
                }
            });
        
            let mensaje = await response.json();

            if(response.status == 200){
                console.log("Guardado");
            }
            else{
                alert(mensaje.Mensaje);
            }
        }

        async function change(obj){
            let id = obj.getElementsByTagName('td')[0].innerText;
            let check = obj.getElementsByTagName('input')[0].checked;
            let response = await fetch('/completar/'+id, {
                method: 'PUT', 
                credentials: 'include',
                body: JSON.stringify({check: check}),
                headers:{
                    'Content-Type': 'application/json'
                }
            });
        
            let mensaje = await response.json();

            if(response.status == 200){
                console.log('actualizado');
            }
            else{
                alert(mensaje.mensaje);
            }
        }
      
        socket.on('updateEstado', function(obj){
            //console.log(obj);
            let tablaLista = document.getElementById('lista');
            for(let i= 1; i<tablaLista.getElementsByTagName('tr').length; i++){ // i=1 because 1st tr is from thead and we only want the ones with dynamic content
                if(typeof tablaLista.getElementsByTagName('tr')[i].getElementsByTagName('td')[0].innerText !== "undefined"){
                    if(tablaLista.getElementsByTagName('tr')[i].getElementsByTagName('td')[0].innerText == obj.id){
                        console.log(tablaLista.getElementsByTagName('tr')[i].getElementsByTagName('input')[0].checked);
                        if(obj.check == 1){
                            tablaLista.getElementsByTagName('tr')[i].getElementsByTagName('input')[0].checked = true;
                            tablaLista.getElementsByTagName('tr')[i].style.textDecorationLine =  "line-through";
                        }
                        else{
                            tablaLista.getElementsByTagName('tr')[i].style.textDecorationLine =  "";
                            tablaLista.getElementsByTagName('tr')[i].getElementsByTagName('input')[0].checked = false;
                        }
                    }
                }
            }
        });

        async function Delete(obj){
            if(confirm("¿Seguro que deseas eliminar?")){
                let id = obj.getElementsByTagName('td')[0].innerText;
                let response = await fetch('/delete/'+id, {
                    method: 'DELETE', 
                    credentials: 'include',
                    headers:{
                        'Content-Type': 'application/json'
                    }
                });
    
                let mensaje = await response.json();
    
                if(response.status == 200){
                    //alert("Eliminado");
                    console.log('eliminado exitosamente');
                }
                else{
                    alert(mensaje.Mensaje);
                }
            }
        }

        socket.on('eliminarToDo', (id) => {
            let tablaLista = document.getElementById('lista');
            for(let i= 1; i<tablaLista.getElementsByTagName('tr').length; i++){
                if(typeof tablaLista.getElementsByTagName('tr')[i].getElementsByTagName('td')[0].innerText !== "undefined"){
                    if(tablaLista.getElementsByTagName('tr')[i].getElementsByTagName('td')[0].innerText == id){
                        tablaLista.getElementsByTagName('tr')[i].remove();
                    }
                }
            }
        });
    </script>
</body>
</html>
